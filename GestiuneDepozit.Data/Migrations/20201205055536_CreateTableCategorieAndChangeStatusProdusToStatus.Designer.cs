// <auto-generated />
using System;
using GestiuneDepozit.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestiuneDepozit.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201205055536_CreateTableCategorieAndChangeStatusProdusToStatus")]
    partial class CreateTableCategorieAndChangeStatusProdusToStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NumeCategorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Categorii");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Locatie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CapacitateProduse")
                        .HasColumnType("int");

                    b.Property<string>("NumeLocatie")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NumeLocatie")
                        .IsUnique()
                        .HasFilter("[NumeLocatie] IS NOT NULL");

                    b.ToTable("Locatii");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Produs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("An")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("CodProdus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInregistrare")
                        .HasColumnType("datetime2");

                    b.Property<string>("InregistratDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocatieId")
                        .HasColumnType("int");

                    b.Property<string>("Saptamana")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("LocatieId");

                    b.ToTable("Produse");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NumeStatus")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NumeStatus")
                        .IsUnique()
                        .HasFilter("[NumeStatus] IS NOT NULL");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumeStatus = "bune"
                        });
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Categorie", b =>
                {
                    b.HasOne("GestiuneDepozit.Data.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Produs", b =>
                {
                    b.HasOne("GestiuneDepozit.Data.Models.Categorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId");

                    b.HasOne("GestiuneDepozit.Data.Models.Locatie", "Locatie")
                        .WithMany("Produse")
                        .HasForeignKey("LocatieId");

                    b.Navigation("Categorie");

                    b.Navigation("Locatie");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Locatie", b =>
                {
                    b.Navigation("Produse");
                });
#pragma warning restore 612, 618
        }
    }
}
