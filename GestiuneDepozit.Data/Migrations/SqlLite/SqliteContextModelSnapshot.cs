// <auto-generated />
using System;
using GestiuneDepozit.Data.ServiceProviderContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestiuneDepozit.Data.Migrations.SqlLite
{
    [DbContext(typeof(SqliteContext))]
    partial class SqliteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeCategorie")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Categorii");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Locatie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacitateProduse")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeLocatie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NumeLocatie")
                        .IsUnique();

                    b.ToTable("Locatii");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Produs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("An")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodProdus")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInregistrare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InregistratDe")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocatieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Saptamana")
                        .HasColumnType("TEXT");

                    b.Property<string>("Serie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("LocatieId");

                    b.ToTable("Produse");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NumeStatus")
                        .IsUnique();

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumeStatus = "bune"
                        });
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Categorie", b =>
                {
                    b.HasOne("GestiuneDepozit.Data.Models.Status", "Status")
                        .WithMany("Categorii")
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Produs", b =>
                {
                    b.HasOne("GestiuneDepozit.Data.Models.Categorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId");

                    b.HasOne("GestiuneDepozit.Data.Models.Locatie", "Locatie")
                        .WithMany("Produse")
                        .HasForeignKey("LocatieId");

                    b.Navigation("Categorie");

                    b.Navigation("Locatie");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Locatie", b =>
                {
                    b.Navigation("Produse");
                });

            modelBuilder.Entity("GestiuneDepozit.Data.Models.Status", b =>
                {
                    b.Navigation("Categorii");
                });
#pragma warning restore 612, 618
        }
    }
}
